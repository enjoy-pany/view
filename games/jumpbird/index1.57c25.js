!function(e){var i={};function s(n){if(i[n])return i[n].exports;var t=i[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,s),t.l=!0,t.exports}s.m=e,s.c=i,s.d=function(n,t,e){s.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:e})},s.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},s.t=function(t,n){if(1&n&&(t=s(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var e=Object.create(null);if(s.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var i in t)s.d(e,i,function(n){return t[n]}.bind(null,i));return e},s.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return s.d(t,"a",t),t},s.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},s.p="./",s(s.s="./src/Game.js")}({"./src/Game.js":
/*!*********************!*\
  !*** ./src/Game.js ***!
  \*********************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\n(function () {\n    window.onload = function () {\n        game.init();\n    };\n    var game = window.game = {\n        width: 0,\n        height: 0,\n\n        asset: null,\n        stage: null,\n        ticker: null,\n        state: null, // ready: 准备阶段 play:进行中状态 over:游戏结束状态\n        score: 0,\n\n        bg: null,\n        ground: null,\n        bird: null,\n        holdbacks: null,\n        gameReadyScene: null,\n        gameOverScene: null,\n\n        startTime: null,\n        endTime: null,\n\n        init: function init() {\n            this.asset = new game.Asset();\n            this.asset.on('complete', function (e) {\n                // 注册监听\n                this.asset.off('complete'); // 注销监听\n                this.initStage();\n            }.bind(this));\n            this.asset.load(); //开始读取资源\n        },\n        initStage: function initStage() {\n            this.width = Math.min(innerWidth, 750) * 2;\n            this.height = Math.min(innerHeight, 450) * 2;\n            this.scale = 0.5;\n\n            //舞台画布\n            var renderType = location.search.indexOf('dom') != -1 ? 'dom' : 'canvas';\n\n            //舞台\n            this.stage = new Hilo.Stage({\n                renderType: renderType,\n                width: this.width,\n                height: this.height,\n                scaleX: this.scale,\n                scaleY: this.scale\n            });\n            document.body.appendChild(this.stage.canvas);\n\n            //启动计时器\n            this.ticker = new Hilo.Ticker(60);\n            this.ticker.addTick(Hilo.Tween);\n            this.ticker.addTick(this.stage);\n            this.ticker.start(true);\n\n            //绑定交互事件\n            this.stage.enableDOMEvent(Hilo.event.POINTER_START, true);\n            this.stage.enableDOMEvent(Hilo.event.POINTER_END, true);\n            this.stage.on(Hilo.event.POINTER_START, this.onUserInputStart.bind(this));\n            this.stage.on(Hilo.event.POINTER_END, this.onUserInputEnd.bind(this));\n\n            // 游戏元素初始化\n            this.initBackground();\n            this.initBird();\n            this.initHoldbacks();\n            this.initCurrentScore();\n            this.initScenes();\n\n            // 准备游戏\n            this.gameReady();\n        },\n        initBackground: function initBackground() {\n            var bgWidth = this.width * this.scale;\n            var bgHeight = this.height * this.scale;\n\n            var bgImg = this.asset.bg;\n            this.bg = new Hilo.Bitmap({\n                id: 'bg',\n                image: bgImg,\n                scaleX: this.width / bgImg.width,\n                scaleY: this.height / bgImg.height\n            }).addTo(this.stage);\n\n            //地面\n            var groundImg = this.asset.ground;\n            var groundOffset = 60;\n            this.ground = new Hilo.Bitmap({\n                id: 'ground',\n                image: groundImg,\n                scaleX: (this.width + groundOffset * 2) / groundImg.width\n            }).addTo(this.stage);\n\n            //设置地面的y轴坐标\n            this.ground.y = this.height - this.ground.height + 150;\n\n            //移动地面\n            this.groundTween = Hilo.Tween.to(this.ground, {\n                x: -groundOffset * this.ground.scaleX\n            }, {\n                duration: 400,\n                loop: true,\n                delay: 500\n            });\n        },\n\n        initBird: function initBird() {\n            this.bird = new game.Bird({\n                id: 'bird',\n                atlas: this.asset.birdAtlas,\n                startX: 100,\n                startY: this.height >> 1,\n                groundY: this.ground.y - 12\n            }).addTo(this.stage, this.ground.depth - 1);\n            this.bird.on('done', this.flyDone.bind(this));\n        },\n        initHoldbacks: function initHoldbacks() {\n            this.holdbacks = new game.Holdbacks({\n                id: 'holdbacks',\n                image: this.asset.holdback,\n                height: this.height,\n                startX: this.width + 200,\n                groundY: this.ground.y\n            }).addTo(this.stage, this.ground.depth - 1);\n        },\n        initCurrentScore: function initCurrentScore() {\n            //当前分数\n            this.currentScore = new Hilo.BitmapText({\n                id: 'score',\n                glyphs: this.asset.numberGlyphs,\n                textAlign: 'center'\n            }).addTo(this.stage);\n\n            //设置当前分数的位置\n            this.currentScore.x = this.width - this.currentScore.width >> 1;\n            this.currentScore.y = 180;\n        },\n        initScenes: function initScenes() {\n            //结束场景\n            this.gameOverScene = new game.OverScene({\n                id: 'overScene',\n                width: this.width,\n                height: this.height,\n                image: this.asset.over,\n                numberGlyphs: this.asset.numberGlyphs,\n                visible: false\n            }).addTo(this.stage);\n        },\n        gameReady: function gameReady() {\n            this.state === 'ready';\n            this.score = 0;\n            this.currentScore.visible = true;\n            this.currentScore.setText(this.score);\n            this.bird.getReady();\n        },\n\n        onUserInputStart: function onUserInputStart(e) {\n            if (this.state === 'play') return;\n            if (this.state === 'over') {\n                this.restartGame();\n            }\n            this.startTime = +new Date();\n            var me = this;\n            var base = 1;\n            this.inputTimes = setInterval(function () {\n                base -= .02;\n                if (base < 0.4) return;\n                me.bird.scaleX = base;\n                me.bird.scaleY = base;\n            }, 60);\n        },\n        onUserInputEnd: function onUserInputEnd(e) {\n            if (this.state === 'play') return;\n            clearInterval(this.inputTimes);\n            Hilo.Tween.to(this.bird, { scaleX: 1, scaleY: 1 }, { time: 100 });\n            this.endTime = +new Date();\n            var diffTime = this.endTime - this.startTime;\n            this.state = 'play';\n            this.bird.startFly(diffTime);\n        },\n        restartGame: function restartGame() {\n            this.gameOverScene.hide();\n            this.gameReady();\n        },\n\n        gameOver: function gameOver() {\n            this.state = 'over';\n            //显示结束场景\n            this.gameOverScene.show();\n            // 隐藏分数\n            this.currentScore.visible = false;\n        },\n        flyDone: function flyDone() {\n            if (this.holdbacks.collisionTest(this.bird)) {\n                var me = this;\n                me.score += 1;\n                me.currentScore.setText(me.score);\n                me.bird.startMove(function () {\n                    console.log('ddddd');\n                    me.state = 'ready';\n                });\n            } else {\n                this.gameOver();\n            }\n        }\n    };\n})();\n\n//# sourceURL=webpack:///./src/Game.js?")}});