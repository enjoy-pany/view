!function(e){var r={};function i(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=e,i.c=r,i.d=function(t,n,e){i.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:e})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(n,t){if(1&t&&(n=i(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var e=Object.create(null);if(i.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var r in n)i.d(e,r,function(t){return n[t]}.bind(null,r));return e},i.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(n,"a",n),n},i.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},i.p="./",i(i.s="./src/Bird.js")}({"./src/Bird.js":
/*!*********************!*\
  !*** ./src/Bird.js ***!
  \*********************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\n(function (ns) {\n    var Bird = ns.Bird = Hilo.Class.create({\n        Extends: Hilo.Sprite,\n        constructor: function constructor(properties) {\n            Bird.superclass.constructor.call(this, properties);\n            //添加小鸟精灵动画帧\n            this.addFrame(properties.atlas.getSprite('bird'));\n            //设置小鸟扇动翅膀的频率\n            this.interval = 6;\n            //设置小鸟的中心点位置\n            // 而小鸟的宽度和高度分别为86和60，故pivotX和pivotY即为43和30。\n            this.pivotX = 43;\n            this.pivotY = 30;\n\n            this.flyHeight = 80; // 飞行高度\n            this.gravity = 10 / 1000 * 0.3; // 加速度\n            this.initVelocity = Math.sqrt(2 * this.flyHeight * this.gravity);\n        },\n        startX: 0, //小鸟的起始x坐标\n        startY: 0, //小鸟的起始y坐标\n        groundY: 0, //地面的坐标\n        gravity: 0, //重力加速度\n        flyHeight: 0, //小鸟每次往上飞的高度\n        initVelocity: 0, //小鸟往上飞的初速度\n\n        flyEnd: true, // 是否完成一次飞行\n        isDead: true, //小鸟是否已死亡\n        isUp: false, //小鸟是在往上飞阶段，还是下落阶段\n        flyStartY: 600, //小鸟往上飞的起始y轴坐标\n        flyStartX: 200, //小鸟往上飞的起始y轴坐标\n        flyStartTime: 0, //小鸟飞行起始时间\n\n        v0: 0, //初始速度\n\n        getReady: function getReady() {\n            // this.x = this.startX;\n            // this.y = this.startY;\n            this.x = 200;\n            this.y = 600;\n            //恢复小鸟飞行角度为平行向前\n            this.rotation = -10;\n            //减慢小鸟精灵动画速率\n            this.interval = 6;\n            //恢复小鸟精灵动画\n            this.play();\n            //小鸟上下漂浮的动画\n            // this.tween = Hilo.Tween.to(this, {y:this.y + 10, rotation:-8}, {duration:400, reverse:true, loop:true});\n\n            if (ns.groundTween) ns.groundTween.stop();\n        },\n        startFly: function startFly(dt) {\n            this.flyStartX = this.x;\n            this.flyEnd = false;\n            this.flyStartTime = +new Date();\n            this.v0 = dt * 1.2;\n            if (this.tween) this.tween.pause();\n        },\n        onUpdate: function onUpdate() {\n            if (this.flyEnd) return;\n            //飞行时间\n            var t = (+new Date() - this.flyStartTime) / 1000;\n            var v0 = this.v0;\n            var v1 = 1000;\n            var g = 1200;\n            var v = v0 - g * t;\n            var h = 2 / 3 * v0 * t - .5 * g * t * t;\n            var l = .4 * v0 * t;;\n            //y轴坐标\n            var y = this.flyStartY - h;\n            var x = this.flyStartX + l;\n            if (y < this.flyStartY) {\n                this.y = y;\n                this.x = x;\n            } else {\n                this.fire('done');\n                this.flyEnd = true;\n            }\n        },\n        startMove: function startMove(cb) {\n            ns.groundTween.start();\n            ns.moveTween.start();\n            Hilo.Tween.to(this, { x: 200 }, { duration: 2000, loop: false, delay: 500, onComplete: function onComplete() {\n                    ns.groundTween.pause();\n                    ns.moveTween.pause();\n                    cb();\n                } });\n        }\n    });\n})(window.game);\n\n//# sourceURL=webpack:///./src/Bird.js?")}});